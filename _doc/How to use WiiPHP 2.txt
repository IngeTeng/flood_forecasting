===========================【类的模板】===========================

类的模板文件：_.class.php
编写一个新的类，可以将该文件另存为，然后修改其中必要的数据。

===========================【类的位置】===========================

lib根目录下放置各种业务类。
WiiPHP在lib下设置了common和table两个文件夹，作用如下：
lib/common文件夹中放置与业务毫无关系的基础功能类（如mypdo、 mylog、MyException、fileupload等）
lib/table 文件夹中放置数据库表类
【
原则上，所有的SQL语句均在table类中。
即：
a)其他类对于数据库的访问都需要通过table类。
b)其他类不知道数据库表名和字段。
c)table类无需做任何逻辑判断。
d)设计数据库表的人，首先负责写好相关的table类基础函数。
e)table类根据其他类的需要补充或修改函数。
】

table类无需其中的构造函数。
table类的函数方法一般是静态的（无需实例化即可使用）。

提示：当项目比较简单时，无需分层提供业务类对应的table类。

===========================【类的命名】===========================

类名称首字母必须大写；
table类以Table_ 开头命名；
类文件必须以.class.php为结尾

===========================【一般函数】===========================

业务无关的一般函数：function_common.php
业务有关的一般函数：function.inc.php

===========================【类的函数】===========================

类的函数都必须定义public 或 protected 或 private，不能空着；
类的函数命名必须小写字母或下划线_开头；
类的函数必须按照phpdocument的格式写好参数说明；

===========================【变量常量】===========================

-- 系统环境相关的变量放置在根目录下的config.inc.php中。
-- setting.inc.php 中放置与业务有关的变量或者常量，这里设置的变量
   或者常量一般是无需数据库管理的，但又具有可扩展性的。